"""#### Import Libraries"""
from setting import *

import random
import os
from datetime import date, timedelta, datetime
import pickle

import numpy as np
import pandas as pd

# Ignore warnings
import warnings
warnings.filterwarnings('ignore')

""" Utility Functions """
def current_time():
    return str(datetime.now().strftime("%Y-%m-%d %H:%M:%S"))

def print_title(title):
    print()
    print('='*5, title, '='*5)

def print_info(info):
    print("{:<6} {}: {}".format('[INFO]', current_time(), info))

def check_dir(directory):
    if not os.path.exists(directory):
        check_dir(os.path.dirname(directory))
        os.mkdir(directory)
        print_info('Make directory: {}'.format(directory))

for dir in DIRECTORY_TO_CHECK:
    check_dir(dir)

# def save_obj(obj, name):
#     with open(os.path.join(TRAIN_RESULT_PATH, name + '.pkl'), 'wb') as f:
#         pickle.dump(obj, f, pickle.HIGHEST_PROTOCOL)
#
# def load_obj(name):
#     with open(os.path.join(TRAIN_KEEP_PATH, name + '.pkl'), 'rb') as f:
#         return pickle.load(f)
#
# def convert_filename(filename):
#     for unacceptable in [' ', ':', '.', '(', ')']:
#         filename = filename.replace(unacceptable, '_')
#     return filename
#
# """Check Data"""
# def display_null_percentage(data):
#     df = data.isnull().sum().reset_index().rename(columns = {0: 'Count', 'index': 'Column'})
#     df['Frequency'] = df['Count'] / data.shape[0] * 100
#     pd.options.display.float_format = '{:.2f}%'.format
#     print(df)
#     pd.options.display.float_format = None
#
# def display_category_counts(data, categorical_features):
#   for categorical_feature in categorical_features:
#     print('-' * 30)
#     print(categorical_feature)
#     print(data[categorical_feature].value_counts(dropna=False))
#
# def get_percentage(data, column):
#     count_df = data[column].value_counts().reset_index().rename(columns = {column: 'Count', 'index': column})
#     count_df['%'] = count_df['Count'] / data.shape[0]
#     return count_df
